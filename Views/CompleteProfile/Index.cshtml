@model SkillBridge.Models.CompleteProfileViewModel
@using Newtonsoft.Json;
@{
    ViewBag.Title = "Complete Your Profile";

    var allSkills = Model.AllSkillCategories
        .SelectMany(c => c.Skills)
        .ToList();

    var skillStagesDict = allSkills.ToDictionary(
        s => s.Id.ToString(), 
        s => s.SkillStages.Select(st => new { id = st.StageNumber, name = st.Description }).ToList()
    );

    var skillStagesDataJson = JsonConvert.SerializeObject(skillStagesDict);
}

<main aria-labelledby="title">
    <h2 id="title">@ViewBag.Title</h2>

    @using (Html.BeginForm("Index", "CompleteProfile", FormMethod.Post, new { @id = "completeProfileForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <h4>Basic Information</h4>
        <div class="form-group">
            @Html.LabelFor(m => m.FullName)
            @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", placeholder = "Full Name" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Age)
            @Html.TextBoxFor(m => m.Age, new { @class = "form-control", type = "number", min = "1", placeholder = "Age" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Profession)
            @Html.DropDownListFor(m => m.Profession,
                new SelectList(new[]
                {
                    "Student",
                    "Teacher",
                    "Software Developer",
                    "Engineer",
                    "Designer",
                    "Freelancer",
                    "Entrepreneur"
                }, Model.Profession),
                "Select Profession",
                new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Location)
            @Html.DropDownListFor(m => m.Location,
                new SelectList(new[]
                {
                    "Barishal",
                    "Chattogram",
                    "Dhaka",
                    "Khulna",
                    "Rajshahi",
                    "Rangpur",
                    "Mymensingh",
                    "Sylhet"
                }, Model.Location),
                "Select Location",
                new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Bio)
            @Html.TextAreaFor(m => m.Bio, 4, 50, new { @class = "form-control", placeholder = "Short Bio" })
        </div>

        <hr />
        <h4>Skills You Want to Learn</h4>
        <div class="row">
            @foreach (var category in Model.AllSkillCategories)
            {
                <div class="col-md-4 mb-3">
                    <h5>@category.Name</h5>
                    <ul class="list-group">
                        @foreach (var skill in category.Skills)
                        {
                            <li class="list-group-item skill-learn" data-skill-id="@skill.Id">
                                @skill.Name
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>

        <hr />
        <h4>Skills You Know</h4>
        <div id="skillsIKnowContainer" class="row">
            @foreach (var category in Model.AllSkillCategories)
            {
                <div class="col-md-4 mb-3 skill-category-container" data-category="@category.Name">
                    <h5>@category.Name</h5>
                    <ul class="list-group">
                        @foreach (var skill in category.Skills)
                        {
                            <li class="list-group-item skill-know" data-skill-id="@skill.Id" data-skill-name="@skill.Name">
                                @skill.Name
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>

        <div id="skillStagesSelectionContainer" class="mt-3"></div>

        <div class="mt-4">
            <button type="submit" class="btn btn-success" id="proceedButton">Proceed</button>
            <button type="button" class="btn btn-secondary" id="debugButton">Debug Print</button>
        </div>

        <!-- debugging -->
        <div id="debugOutput" class="mt-3 text-monospace"></div>
    }
</main>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <style>
        .stage-option {
            cursor: pointer;
            transition: background-color 0.2s ease, color 0.2s ease;
        }

            .stage-option.badge-primary {
                background-color: #007bff !important;
                color: white !important;
            }

            .stage-option.badge-secondary {
                background-color: #e9ecef !important;
                color: #212529 !important;
            }
    </style>

    <script>
        $(document).ready(function () {
            var $form = $("#completeProfileForm");
            var skillIKnowIndexMap = {};
            var skillStagesData = @Html.Raw(skillStagesDataJson);
            var selectedSkillsToLearn = new Set();
            var selectedSkillsIKnow = {};

            // Skills to Learn click
            $(".skill-learn").click(function () {
                var $this = $(this);
                var skillId = $this.data("skill-id");

                $this.toggleClass("active");
                if ($this.hasClass("active")) {
                    selectedSkillsToLearn.add(skillId);
                    $('<input>').attr({ type: 'hidden', name: 'SkillsToLearn', value: skillId }).appendTo($form);
                } else {
                    selectedSkillsToLearn.delete(skillId);
                    $form.find('input[name="SkillsToLearn"][value="' + skillId + '"]').remove();
                }

                $(".skill-know").each(function () {
                    var id = $(this).data("skill-id");
                    if (selectedSkillsToLearn.has(id)) $(this).hide().removeClass("active");
                    else $(this).show();
                });

                selectedSkillsToLearn.forEach(function (id) {
                    $("#stage-selection-" + id).remove();
                    delete selectedSkillsIKnow[id];
                });
            });

            // Skills I Know click
            $(document).on("click", ".skill-know", function () {
                var $this = $(this);
                var skillId = $this.data("skill-id");
                var skillName = $this.data("skill-name");

                if ($this.hasClass("active")) {
                    $this.removeClass("active");
                    $("#stage-selection-" + skillId).remove();
                    delete selectedSkillsIKnow[skillId];
                    delete skillIKnowIndexMap[skillId];
                } else {
                    $this.addClass("active");

                    //stage selection
                    var stages = skillStagesData[skillId.toString()];
                    if (!stages) return;

                    var $stageContainer = $('<div class="stage-selection-container mt-2" id="stage-selection-' + skillId + '"><strong>Stages you know for ' + skillName + ':</strong><br/></div>');
                    stages.forEach(function (st) {
                        var $span = $('<span class="badge badge-secondary text-dark stage-option mr-1 mb-1" data-stage="' + st.id + '" data-skill-id="' + skillId + '">' + st.name + '</span>');
                        $stageContainer.append($span);
                    });

                    $("#skillStagesSelectionContainer").append($stageContainer);

                    var index = Object.keys(skillIKnowIndexMap).length;
                    skillIKnowIndexMap[skillId] = index;
                    $('<input>').attr({ type: 'hidden', name: 'SkillsIKnow[' + index + '].SkillId', value: skillId, 'data-skill-id': skillId }).appendTo($form);
                    $('<input>').attr({ type: 'hidden', name: 'SkillsIKnow[' + index + '].KnownUpToStage', value: 1, 'data-skill-id': skillId }).appendTo($form);

                    $('#stage-selection-' + skillId + ' .stage-option').each(function () {
                        if ($(this).data("stage") <= 1) {
                            $(this).removeClass("badge-secondary").addClass("badge-primary");
                        }
                    });
                    selectedSkillsIKnow[skillId] = 1;
                }
            });

            // Stage selection click
            $(document).on("click", ".stage-option", function () {
                var $this = $(this);
                var skillId = $this.data("skill-id");
                var stage = $this.data("stage");

                selectedSkillsIKnow[skillId] = stage;

                var $allStages = $('#stage-selection-' + skillId + ' .stage-option');
                $allStages.each(function () {
                    if ($(this).data("stage") <= stage) {
                        $(this).removeClass("badge-secondary").addClass("badge-primary");
                    } else {
                        $(this).removeClass("badge-primary").addClass("badge-secondary");
                    }
                });

                var idx = skillIKnowIndexMap[skillId];
                $form.find('input[name="SkillsIKnow[' + idx + '].KnownUpToStage"]').val(stage);
            });

            // Debug Print button
            $("#debugButton").click(function () {
                var debugData = {};

                $("#completeProfileForm").find("input, select, textarea").each(function () {
                    var $el = $(this);
                    var name = $el.attr("name");
                    var value = $el.val();

                    if (name) {
                        if (debugData[name]) {
                            if (!Array.isArray(debugData[name])) {
                                debugData[name] = [debugData[name]];
                            }
                            debugData[name].push(value);
                        } else {
                            debugData[name] = value;
                        }
                    }
                });

                $("#debugOutput").html("<pre>" + JSON.stringify(debugData, null, 2) + "</pre>");
            });
        });
    </script>
}