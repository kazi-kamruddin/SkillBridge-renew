@model SkillBridge.Models.PublicProfileViewModel
@using Microsoft.AspNet.Identity

@section Styles {
    <link rel="stylesheet" href="~/Styles/publicProfile.css" />
}

<main class="container text-center mt-5" aria-labelledby="title">

    <!-- Profile Picture -->
    <div class="mb-3 text-center">
        <img src="@Model.ProfileImageUrl"
             alt="@Model.FullName"
             class="rounded-circle"
             style="width:150px; height:150px; object-fit:cover; border:2px solid #ccc;" />
    </div>

    <!-- Name -->
    <h3 id="title">@Model.FullName’s Profile</h3>

    <!-- Bio, Profession, Location -->
    <p class="text-muted">@Model.Profession | @Model.Location</p>
    <p>@Model.Bio</p>

    <hr />

    <!-- Personal Information -->
    <div class="text-start mx-auto" style="max-width: 600px;">
        <h4 class="mt-4 mb-3">Personal Information</h4>
        <dl class="row">
            <dt class="col-sm-4">Profession:</dt>
            <dd class="col-sm-8">@Model.Profession</dd>

            <dt class="col-sm-4">Average Rating:</dt>
            <dd class="col-sm-8">
                @Model.AverageRating.ToString("0.0") / 10
                (out of @Model.RatingsReceived rated interaction@(Model.RatingsReceived == 1 ? "" : "s"))
            </dd>

            <dt class="col-sm-4"></dt>
            <dd class="col-sm-8">
                Completed total @Model.InteractionsCompleted interaction@(Model.InteractionsCompleted == 1 ? "" : "s")
            </dd>
        </dl>
    </div>

    <!-- Teaching Skills -->
    <h4 class="mt-4 mb-3">Skills @Model.FullName knows</h4>
    <div class="card shadow p-4 mx-auto" style="max-width: 600px;">
        <ul id="skillsToTeachList" class="list-unstyled mb-0">
            @foreach (var skill in Model.SkillsToTeach)
            {
                // preserve original fetching / fields; determine progress values safely
                var showButton = skill.RequestStatus != "Hidden";
                var buttonClass = "btn btn-success"; // default green
                var buttonText = "Request";
                var isDisabled = false;

                if (skill.RequestStatus == "Pending")
                {
                    buttonText = "Request Sent";
                    buttonClass = "btn btn-warning"; // orange
                    isDisabled = true;
                }
                else if (skill.RequestStatus == "Declined")
                {
                    buttonText = "Request Again";
                    buttonClass = "btn btn-danger"; // red
                }

                // determine known/total via reflection if properties exist, fallback safely
                var knownProp = skill.GetType().GetProperty("KnownUpToStage");
                var stageProp = skill.GetType().GetProperty("Stage");
                var totalProp = skill.GetType().GetProperty("TotalStages");

                int known = 0;
                int total = 10; // fallback total if not provided

                if (knownProp != null)
                {
                    known = Convert.ToInt32(knownProp.GetValue(skill) ?? 0);
                }
                else if (stageProp != null)
                {
                    known = Convert.ToInt32(stageProp.GetValue(skill) ?? 0);
                }

                if (totalProp != null)
                {
                    total = Convert.ToInt32(totalProp.GetValue(skill) ?? 10);
                }

                var percent = (total > 0) ? (known * 100 / total) : 0;
                <li class="mb-4 text-start">
                    <label><strong>@skill.SkillName</strong> (Stage: @((stageProp != null) ? stageProp.GetValue(skill) : (knownProp != null ? knownProp.GetValue(skill) : skill.Stage)))</label>

                    <!-- Progress bar (copied from index design) -->
                    <div class="progress mt-2" style="height:25px;">
                        <div class="progress-bar bg-danger" role="progressbar"
                             style="width:@(percent)%;"
                             aria-valuenow="@(percent)"
                             aria-valuemin="0" aria-valuemax="100">
                            @(percent)%
                        </div>
                    </div>

                    <!-- Centered request button under the progress bar -->
                    @if (showButton)
                    {
                        <div class="text-center mt-3">
                            <button class="@buttonClass requestSkillBtn"
                                    data-userskill-id="@skill.UserSkillId"
                                    data-profile-id="@Model.UserId"
                                    @((isDisabled) ? "disabled=\"disabled\"" : "")>
                                @buttonText
                            </button>
                        </div>
                    }
                </li>
            }
        </ul>
    </div>

    <!-- Learning Skills -->
    <h4 class="mt-5 mb-3">Skills @Model.FullName wants to learn</h4>
    <div class="d-flex flex-wrap justify-content-center gap-3">
        @foreach (var skill in Model.SkillsToLearn)
        {
            <div class="card" style="background-color:#004953; color:white; min-width:120px; max-width:200px;">
                <div class="card-body p-2 text-center">
                    <span>@skill.SkillName (Stage: @skill.Stage)</span>
                </div>
            </div>
        }
    </div>

    <div style="height: 45px;"></div>
</main>

@section Scripts {
    <script src="~/bundles/jquery"></script>
    <script>
        $(document).ready(function () {
            $(".requestSkillBtn").click(function () {
                var $btn = $(this);
                var userSkillId = $btn.data("userskill-id");
                var profileId = $btn.data("profile-id");

                if (!confirm("Send a request to learn " + $btn.closest("li").find("label").text() + "?")) return;

                $.ajax({
                    url: '@Url.Action("SendSkillRequest", "Profile")',
                    type: 'POST',
                    data: { userSkillId: userSkillId, profileId: profileId },
                    success: function (res) {
                        if (res.success) {
                            $btn.text("Request Sent");
                            $btn.removeClass("btn-success btn-danger").addClass("btn-warning");
                            $btn.prop("disabled", true);
                            alert("Request sent successfully!");
                        } else {
                            alert(res.message || "Failed to send request.");
                        }
                    },
                    error: function () {
                        alert("Error sending request. Try again.");
                    }
                });
            });
        });
    </script>
}
