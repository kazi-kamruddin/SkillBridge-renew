@model List<SkillBridge.Models.Notification>
@{
    ViewBag.Title = "Notifications";
}

<h2>Notifications</h2>

@if (!Model.Any())
{
    <p>No notifications.</p>
}
else
{
    <ul class="list-group">
        @foreach (var n in Model)
        {
            <li class="list-group-item @(n.IsRead ? "" : "list-group-item-info") d-flex justify-content-between align-items-start" data-id="@n.Id">
                <div class="flex-grow-1">
                    @Html.Raw(n.Message)
                    <br />
                    <small class="text-muted">@n.CreatedAt.ToLocalTime().ToString("g")</small>
                </div>

                <div class="ml-auto text-right">
                    @if (n.Type == "SkillRequest" && !n.IsRead)
                    {
                        <div class="mt-2">
                            <button class="btn btn-sm btn-success accept-btn" data-id="@n.Id">Accept</button>
                            <button class="btn btn-sm btn-danger decline-btn" data-id="@n.Id">Decline</button>
                        </div>

                        <div class="mt-2 skill-selection d-none" data-id="@n.Id">
                            <label>Select skill to learn from requester:</label>
                            <select class="form-control skill-dropdown" data-id="@n.Id"></select>
                            <button class="btn btn-sm btn-primary mt-1 initialize-btn" data-id="@n.Id">Start Interaction</button>
                        </div>
                    }
                    else if (n.Type == "Info" && !n.IsRead)
                    {
                        <div class="mt-2">
                            <button class="btn btn-sm btn-secondary mark-read" data-id="@n.Id">Mark as Read</button>
                        </div>
                    }
                    else if (n.Type == "Feedback" && !n.IsRead)
                    {
                        <div class="mt-2">
                            <a href="@Url.Action("RateInteraction", "Interactions", new { interactionId = n.ReferenceId })" class="btn btn-sm btn-primary">
                                Rate the Interaction
                            </a>
                            <button class="btn btn-sm btn-secondary mark-read" data-id="@n.Id">Mark as Read</button>
                        </div>
                    }
                </div>
            </li>
        }
    </ul>
}

@section scripts {
    <script>
        $(document).ready(function () {
            $(document).on("click", ".mark-read", function () {
                var btn = $(this);
                var id = btn.data("id");
                $.post("/Notifications/MarkAsRead/" + id, function (res) {
                    if (res.success) {
                        var li = btn.closest("li");
                        li.removeClass("list-group-item-info");
                        btn.parent().remove(); 
                    }
                });
            });

            // decline request
            $(document).on("click", ".decline-btn", function () {
                var btn = $(this);
                var id = btn.data("id");
                $.post("/Notifications/DeclineSkillRequest", { notificationId: id }, function (res) {
                    if (res.success) {
                        btn.closest("li").removeClass("list-group-item-info");
                        btn.closest("li").fadeOut();
                    }
                });
            });

            // accept request
            $(document).on("click", ".accept-btn", function () {
                var btn = $(this);
                var id = btn.data("id");
                var container = $(".skill-selection[data-id='" + id + "']");
                var dropdown = container.find(".skill-dropdown");

                $.get("/Notifications/AcceptSkillRequest", { notificationId: id }, function (res) {
                    dropdown.empty();
                    if (res.skills.length === 0) {
                        dropdown.append('<option value="">No skills available</option>');
                    } else {
                        $.each(res.skills, function (i, skill) {
                            dropdown.append('<option value="' + skill.SkillId + '">' + skill.Name + '</option>');
                        });
                    }
                    container.removeClass("d-none");
                });
            });

            // initiate interaction
            $(document).on("click", ".initialize-btn", function () {
                var btn = $(this);
                var id = btn.data("id");
                var dropdown = $(".skill-selection[data-id='" + id + "']").find(".skill-dropdown");
                var selectedSkillId = dropdown.val();
                if (!selectedSkillId) {
                    alert("Please select a skill to learn from requester.");
                    return;
                }

                $.post("/Notifications/InitializeInteraction", { notificationId: id, skillId: selectedSkillId }, function (res) {
                    if (res.success) {
                        btn.closest("li").removeClass("list-group-item-info");
                        btn.closest("li").fadeOut();
                    } else {
                        alert("Failed to initialize interaction.");
                    }
                });
            });
        });
    </script>
}
